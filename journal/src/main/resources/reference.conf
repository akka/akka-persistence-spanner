akka.persistence.spanner {

 project = "akka"
 instance = "akka"
 database = "akka"

 journal {
  class = "akka.persistence.spanner.SpannerJournal"

  # name of the table to use for events
  table = "journal"

  # name of the auxilary table used to store information about deletes
  deletions-table = "deletions"
 }

 query {
  class = "akka.persistence.spanner.SpannerReadJournalProvider"

  # When live queries return no results. How often to poll Spanner for new
  # rows
  refresh-interval = 3s
 }

 snapshot {
   class = "akka.persistence.spanner.SpannerSnapshotStore"
   table = "snapshots"
 }



 # config location for the grpc client.
 # located under akka.grpc.client
 grpc-client = "spanner-client"

 session-pool {
  # the max number of sessions to create when connecting to spanner.
  # currently all of these sessions are created eagerly and kept alive.
  # called 'max-size' as future versions will likely have a dynamic
  # session pool
  max-size = 5

  # the max number of outstanding requests for sessions when the pool is
  # fully utilized
  max-outstanding-requests = 1000

  # How often to retry the batch create sessions
  retry-create-interval = 2s

  # If the pool encounters an unexpected error, how long to backoff for before
  # re-creating the pool from scratch. For expected errors such as the intitial
  # batch session creation set other specific intervals
  restart-min-backoff = 1s
  restart-max-backoff = 10s

  # How often to send a dummy query for each session to keep it alive
  # Spanner drops sessions after 60 minutes
  keep-alive-interval = 25 minutes
 }

 # set to false for running with the spanner emulator
 use-auth = true

 # Fail a request if a session cannot be acquired within this timeout
 session-acquisition-timeout = 5 s

 # If a write fails retry at most this many times
 # also time capped within the retry interval. Note that the timeout is in concert with
 # the akka persistence circuit breaker call timeout
 max-write-retries = 3
 max-write-retry-timeout = 10s

}

akka.grpc.client.spanner-client {
 host = spanner.googleapis.com
 port = 443

 ssl-config {
  disabledKeyAlgorithms = []
  trustManager = {
   stores = [
    { type = "PEM", path = "GoogleInternetAuthorityG3.crt", classpath = true }
   ]
  }
 }
}
