language: scala
sudo: false

services:
  - docker

before_install:
  # using jabba for custom jdk management
  - curl -sL https://raw.githubusercontent.com/shyiko/jabba/0.11.2/install.sh | bash && . ~/.jabba/jabba.sh
  - jabba install adopt@~1.11-0

# default script for jobs, that do not have any specified
script:
  - jabba use ${JDK:=adopt@~1.11-0}
  - java -version
  - ${PRE_CMD:=return 0} && sbt -jvm-opts .jvmopts-travis "$CMD"

jobs:
  include:
# TODO create whitesource project
#    - stage: whitesource
#      script: sbt whitesourceCheckPolicies whitesourceUpdate

    - stage: check
      script: sbt headerCheck || { echo "[error] Missing license headers found. Please run 'headerCreate' and commit the updated code."; false; }
      name: "Copyright header check"
    - script: sbt scalafmtCheck || { echo "[error] Unformatted code found. Please run 'Test/compile' and commit the reformatted code."; false; }
      name: "Code style check"
    - script: sbt scalafmtSbtCheck || { echo "[error] Unformatted sbt code found. Please run 'scalafmtSbt' and commit the reformatted code."; false; }
      name: "Build code style check"
    - env: CMD="+Test/compile"
    - stage: test
    - env:
      - CMD=docs/paradox
    - env:
      - CMD=root/doc
    - env:
      - PRE_CMD="./docker/setup_emulator.sh"
      - CMD=";test"
      name: "Run tests (AdoptOpenJDK 11)"

    - stage: publish
      script: sbt +publish

stages:
  # runs on master commits and PRs
  - name: check
    if: NOT tag =~ ^v

  # runs on main repo master commits and version-tagged commits
  - name: whitesource
    if: repo = akka/akka-persistence-spanner AND ( ( branch = master AND type = push ) OR tag =~ ^v )

  # runs on main repo master commits and version-tagged commits
  - name: publish
    if: repo = akka/akka-persistence-spanner AND tag =~ ^v

before_cache:
  - find $HOME/.ivy2/ -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt   -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.ivy2/cache
    - $HOME/.sbt/boot
    - $HOME/.jabba/jdk

env:
  global:
  # encrypt with: travis encrypt BINTRAY_USER=...
  - secure: BTqCS8DmQXgoIexrHQu1e+P1HfBCxPW1avFMck7w4LEAcYoPoWtwAHcQ5hBLr41zljXiekgZdXtlmVecH62S6Ldqn/q6RCRbK47VlBw7/miGTfooOgCsDInkK/JsmZjiyzIgY+UjLnGAhJ0Jnicd5L6125ltnr9RMw6/nh92Bx9hbLredj73kSxTE+vFZ2TeA6cDfsyT2JGLfI3V38kQC/CXMwihNpSb2nQi8je/G9jf5LH5u0Rqw+j9adoW/V5h8LG+dCIzRVwORUf6fcvafebKhxIb9U+1uy7KoQwuDb1HKaOzh4LRi81vh8kxwWIEqZfy4cZcO5dQkqYdQuKZl3q2So3yXC50eqGnfNV4bIuuTS3Bi4BmbphGz60EQWTWQQpicSx2S8iuKVmw8mHEmdhbDys/PEbJgyp4XSHqu6YxQFGcG37IrHuwgShbux+dBRFkFT7CpYPVoM9MG5vmwDWaW1uGV8o++1vwGAwxAqxYqUVx1qbHnEXURp7R+uL9VhQguz1ZzvmEkP6JvJW3rmcST6Uv2ZO45vMRO4RF7Y0G5lI5E4mCtfhvDHJZYWpI53lVGTwaW+A2VW8lHTMvGtlv8JDFGGWYxOLkhzeDDpvRN16K5vNz576D6qy7zme5wIHn+PRy/njb3qUeEL+QAxoCO5VXMOysNjokPN0p/ck=
  # encrypt with: travis encrypt BINTRAY_PASS=...
  - secure: eY9FtMjFWkzKrDEOhUaYEc0BGw0vkV3X51xgsh/Kaj6rwH8jwNWuWY/C/qC4b8FBYcuE0dkmPMpaKXJR32gSBLNcrPeQ34ypnN5CmBhdu7VvW55ih+OGjz/MuWEYHi5xbchvi6POyARg+5DImoPhD06qC4MuUIFFmUtS1agpvAu2P7GAGI5maZ26bMSv/0+lOCltJTaYI9OA06nzvJohKCGxauGuLFSE7gmAp0XZyBBgT8y2zYgK2tLfTcxcS24/AnktbjABpp5JHCA0NK2mElFRFaJWUWezF3BIieegePirSGPSePYLys4xlBWfCjVCgv4JwPjoj5m9YojpDCDaesfh7zrM2ye5SEEbdzD7nKSKlqL7hJQMKbAX1ohB6K6cC9SkZe40oRbg0tXGBpmWKt9ky5qbQl7aFcQJD51kftmhZE4LZM7MsjkGGe2oJkhE9YyV2WyqdH1vk2s8YrwxvU5I2fSFuF4y92p5TIfZ07EGRwJBFN9vGN9txZH79KYlJ132USZGxfIuxLKl5HsLnwM3w26tFoqdZAKmqiXKCF2Y80t0MvZZV6VRQRmI+Bs5bJ1uJQcbKmxCrC7+/ENaIVUAy7/U8+XbC9sF5b2uVMvd8Ft6H56CqRAwmX2dKwDr5rlSb2NBczlQVdBeMWWQyKbrIaXpn04HkcsgtnUMhi0=
